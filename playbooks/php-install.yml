# SPDX-License-Identifier: MIT-0
---
# Playbook for installing PHP
#
# This playbook installs and configures PHP on target servers.
# It can be used for fresh installations or adding PHP to servers
# that don't have it yet.
#
# Usage Examples:
#
# Basic installation (PHP 8.4 CLI only):
#   ansible-playbook -i inventory playbooks/php-install.yml
#
# With custom PHP version:
#   ansible-playbook -i inventory playbooks/php-install.yml \
#     -e "php_version=8.3"
#
# With PHP-FPM enabled:
#   ansible-playbook -i inventory playbooks/php-install.yml \
#     -e "php_fpm_enabled=true"
#
# With Composer:
#   ansible-playbook -i inventory playbooks/php-install.yml \
#     -e "php_composer_enabled=true"
#
# Full installation with FPM and Composer:
#   ansible-playbook -i inventory playbooks/php-install.yml \
#     -e "php_version=8.4" \
#     -e "php_fpm_enabled=true" \
#     -e "php_composer_enabled=true"
#
# Install specific packages:
#   ansible-playbook -i inventory playbooks/php-install.yml \
#     -e '{"php_packages": ["php8.4-cli", "php8.4-fpm", "php8.4-mysql", "php8.4-mbstring"]}'

- name: Install and Configure PHP
  hosts: php
  become: true

  pre_tasks:
    - name: Display PHP installation parameters
      ansible.builtin.debug:
        msg:
          - "===================================================================="
          - "                      PHP Installation Details                      "
          - "===================================================================="
          - ""
          - "  Target Hosts:           {{ ansible_play_hosts_all | join(', ') }}"
          - "  PHP Version:            {{ php_version | default('8.4') }}"
          - "  PHP-FPM Enabled:        {{ php_fpm_enabled | default(true) }}"
          - "  Composer Enabled:       {{ php_composer_enabled | default(false) }}"
          - "  Set as Default CLI:     {{ php_cli_set_as_default_version | default(true) }}"
          - ""
          - "  This playbook will install and configure PHP with these settings."
          - "  Review the parameters above before proceeding."
          - ""
          - "===================================================================="
      tags: always

    - name: Confirm PHP installation
      ansible.builtin.pause:
        prompt: "Press Enter to continue with PHP installation, or Ctrl+C and then 'a' to abort."
      when: not (php_skip_confirm | default(false))
      tags: always

  roles:
    - role: php

  post_tasks:
    - name: Verify PHP installation
      ansible.builtin.command: php --version
      register: php_version_check
      changed_when: false

    - name: Display installation summary
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════════"
          - "PHP {{ php_version | default('8.4') }} Installation Complete"
          - "═══════════════════════════════════════════════════════════════════════"
          - ""
          - "Installed:"
          - "  • PHP Version: {{ php_version | default('8.4') }}"
          - "  • PHP-FPM: {{ 'Enabled' if php_fpm_enabled | default(true) else 'Disabled' }}"
          - "  • Composer: {{ 'Enabled' if php_composer_enabled | default(false) else 'Disabled' }}"
          - "  • Set as default CLI: {{ 'Yes' if php_cli_set_as_default_version | default(true) else 'No' }}"
          - ""
          - "PHP Version Check:"
          - >-
            {{ php_version_check.stdout_lines[0]
            if php_version_check.stdout_lines | length > 0
            else 'Version check failed' }}
