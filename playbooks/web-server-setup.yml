# SPDX-License-Identifier: MIT-0
---
# Playbook for setting up a web server with Apache and PHP
#
# This playbook installs and configures Apache web server with PHP integration.
# It provides a complete web server setup with PHP-FPM support.
#
# Usage Examples:
#
# Basic installation (Apache + PHP 8.4 with FPM):
#   ansible-playbook -i inventory playbooks/web-server-setup.yml
#
# With custom PHP version:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "php_version=8.3"
#
# With custom Apache server name:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "apache_server_name=example.com"
#
# With custom HTTP ports:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e '{"apache_http_ports": [80, 8080]}'
#
# Without PHP-FPM integration:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "apache_php_fpm_integration=false" \
#     -e "php_fpm_enabled=false"
#
# With SSL disabled:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "apache_ssl_enabled=false"
#
# Full custom setup:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "php_version=8.4" \
#     -e "php_fpm_enabled=true" \
#     -e "apache_php_fpm_integration=true" \
#     -e "apache_server_name=myapp.local" \
#     -e "apache_ssl_enabled=true"
#
# Skip confirmation prompts:
#   ansible-playbook -i inventory playbooks/web-server-setup.yml \
#     -e "web_server_skip_confirm=true"

- name: Setup Web Server with Apache and PHP
  hosts: all
  become: true

  pre_tasks:
    - name: Display web server setup parameters
      ansible.builtin.debug:
        msg:
          - "===================================================================="
          - "                   Web Server Setup Details                        "
          - "===================================================================="
          - ""
          - "  Target Hosts:           {{ ansible_play_hosts_all | join(', ') }}"
          - ""
          - "  Apache Configuration:"
          - "    • Server Name:        {{ apache_server_name | default(ansible_fqdn) }}"
          - "    • SSL Enabled:        {{ apache_ssl_enabled | default(true) }}"
          - "    • HTTP Ports:         {{ apache_http_ports | default([80]) | join(', ') }}"
          - >-
            • HTTPS Ports:        {{ apache_https_ports | default([443]) | join(', ')
            if apache_ssl_enabled | default(true) else 'N/A' }}
          - ""
          - "  PHP Configuration:"
          - "    • PHP Version:        {{ php_version | default('8.4') }}"
          - "    • PHP-FPM Enabled:    {{ php_fpm_enabled | default(true) }}"
          - "    • PHP-FPM Integration: {{ apache_php_fpm_integration | default(true) }}"
          - "    • Set as Default CLI: {{ php_cli_set_as_default_version | default(true) }}"
          - "    • Composer Enabled:   {{ php_composer_enabled | default(false) }}"
          - ""
          - "  This playbook will install and configure a complete web server."
          - "  Review the parameters above before proceeding."
          - ""
          - "===================================================================="
      tags: always

    - name: Confirm web server setup
      ansible.builtin.pause:
        prompt: "Press Enter to continue with web server setup, or Ctrl+C and then 'a' to abort."
      when: not (web_server_skip_confirm | default(false))
      tags: always

  roles:
    - role: jlira.web_server.php
      when: php_fpm_enabled | default(true)

    - role: jlira.web_server.apache

  post_tasks:
    - name: Verify Apache installation
      ansible.builtin.command: apache2 -v
      register: apache_version_check
      changed_when: false
      # when: not ansible_check_mode

    - name: Verify PHP installation
      ansible.builtin.command: php --version
      register: php_version_check
      changed_when: false
      when:
        - php_fpm_enabled | default(true)
        # - not ansible_check_mode

    - name: Check Apache service status
      ansible.builtin.service_facts:
      # when: not ansible_check_mode

    - name: Display installation summary
      ansible.builtin.debug:
        msg:
          - "═══════════════════════════════════════════════════════════════════════"
          - "Web Server Setup Complete"
          - "═══════════════════════════════════════════════════════════════════════"
          - ""
          - "Apache:"
          - >-
            {{ apache_version_check.stdout_lines[0]
            if apache_version_check.stdout_lines | length > 0
            else 'Version check failed' }}
          - "  • Service Status: {{ ansible_facts.services['apache2.service'].state | default('unknown') }}"
          - "  • Server Name: {{ apache_server_name | default(ansible_fqdn) }}"
          - "  • SSL Enabled: {{ apache_ssl_enabled | default(true) }}"
          - ""
          - "PHP:"
          - >-
            {{ php_version_check.stdout_lines[0]
            if php_version_check is not skipped and php_version_check.stdout_lines | default([]) | length > 0
            else 'PHP not installed (disabled)' }}
          - "  • PHP-FPM Enabled: {{ 'Yes' if php_fpm_enabled | default(true) else 'No' }}"
          - "  • PHP-FPM Integration: {{ 'Yes' if apache_php_fpm_integration | default(true) else 'No' }}"
          - "  • Set as default CLI: {{ 'Yes' if php_cli_set_as_default_version | default(true) else 'No' }}"
          - ""
          - "Next Steps:"
          - "  • Access your web server at http://{{ apache_server_name | default(ansible_fqdn) }}"
          - >-
            {% if apache_ssl_enabled | default(true) %}
            • Access via HTTPS at https://{{ apache_server_name | default(ansible_fqdn) }}
            {% endif %}
          - "  • Configure virtual hosts as needed"
          - "  • Deploy your web applications"
          - ""
          - "═══════════════════════════════════════════════════════════════════════"
