---
- name: Check PHP version
  ansible.builtin.command: php --version
  register: php_version
  changed_when: false

- name: Assert PHP is installed
  ansible.builtin.assert:
    that: "'{{ php_version }}' in php_version.stdout"
    fail_msg: "PHP {{ php_version }} is not installed"

- name: Check PHP extensions
  ansible.builtin.command: php -m
  register: php_modules
  changed_when: false

- name: Assert core extensions are loaded
  ansible.builtin.assert:
    that:
      - "'Core' in php_modules.stdout"
    fail_msg: "Core PHP extensions are not loaded"

- name: Test basic PHP execution
  ansible.builtin.command: php -r "echo 'PHP is working';"
  register: php_test
  changed_when: false

- name: Assert PHP basic functionality
  ansible.builtin.assert:
    that: "'PHP is working' in php_test.stdout"
    fail_msg: "Basic PHP execution failed"

- name: Check if PHP-FPM is installed
  ansible.builtin.command: php-fpm{{ php_version }} --version
  register: phpfpm_version_check
  changed_when: false
  failed_when: false
  when: php_fpm_enabled

- name: Assert PHP-FPM is installed
  ansible.builtin.assert:
    that:
      - phpfpm_version_check.rc == 0
      - "'{{ php_version }}' in phpfpm_version_check.stdout"
    fail_msg: "PHP-FPM {{ php_version }} is not installed"
  when: php_fpm_enabled

- name: Check if Composer is installed
  ansible.builtin.command: composer --version
  register: composer_version_check
  changed_when: false
  failed_when: false
  when: php_composer_enabled

- name: Assert Composer is installed
  ansible.builtin.assert:
    that:
      - composer_version_check.rc == 0
      - "'Composer' in composer_version_check.stdout"
    fail_msg: "Composer is not installed"
  when: php_composer_enabled
