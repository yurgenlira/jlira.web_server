# SPDX-License-Identifier: MIT-0
---
# ============================================================================
# Basic Configuration
# ============================================================================

# Server hostname for Apache ServerName directive.
# Defaults to the system hostname.
# Type: String
apache_server_name: "{{ ansible_hostname }}"

# Enable or disable SSL support.
# Type: Boolean
apache_ssl_enabled: true

# Enable or disable PHP integration.
# When enabled, the PHP role will be automatically included and configured.
# Type: Boolean
apache_install_php: false

# ============================================================================
# Apache Main Settings
# ============================================================================

# List of main Apache settings to be configured in apache2.conf.
# Each setting is defined as a dictionary with the following keys:
# - `name`: The name of the Apache directive to configure (e.g., LimitRequestLine, LimitRequestFieldSize).
# - `value`: The value to assign to the Apache directive.
# - `comment` (optional): A comment to include above the directive in the configuration file.
#
# The name `ServerName` is reserved for use with the `apache_server_name` setting,
# so it will be ignored to prevent conflicts.
#
# Example:
# apache_main_settings:
#   - name: LimitRequestLine
#     value: 8190
#     comment: |
#       Maximum size of the request line in bytes.
#       Helps prevent buffer overflow attacks.
#   - name: LimitRequestFieldSize
#     value: 8190
#     comment: Maximum size of each HTTP request header field in bytes.
# Type: List of Dictionaries
apache_main_settings: []

# ============================================================================
# Environment Variables
# ============================================================================

# List of custom environment variables to be configured in envvars file.
# Each variable is defined as a dictionary with the following keys:
# - `name`: The environment variable name (e.g., APACHE_LOG_DIR, CUSTOM_VAR).
# - `value`: The value to assign to the environment variable.
# - `comment` (optional): A comment to include above the variable definition.
#
# Example:
# apache_envvars:
#   - name: APACHE_CUSTOM_LOG_DIR
#     value: /var/log/apache2/custom
#     comment: Custom log directory for application logs
# Type: List of Dictionaries
apache_envvars: []

# ============================================================================
# Port Configuration
# ============================================================================

# List of HTTP ports to listen on.
# Type: List of Integers
apache_http_ports:
  - 80

# List of HTTPS ports to listen on (when SSL is enabled).
# Type: List of Integers
apache_https_ports:
  - 443

# ============================================================================
# Module Management
# ============================================================================

# List of Apache modules to enable.
# Type: List of Strings
apache_modules_enabled: []

# ============================================================================
# Custom Configuration Files
# ============================================================================

# List of custom Apache configuration files to create.
# Each configuration file is defined as a dictionary with the following keys:
# - `name`: A descriptive name for the configuration (used in comments).
# - `path`: The absolute path where the file should be created
#           (e.g., "/data/apache-conf/custom-headers.conf").
# - `content`: The configuration content to write to the file.
#
# Example:
# apache_custom_configs:
#   - name: Custom security headers
#     path: /data/apache-conf/custom-headers.conf
#     content: |
#       # Custom security headers
#       Header always set X-Frame-Options "SAMEORIGIN"
#       Header always set X-Content-Type-Options "nosniff"
#       Header always set X-XSS-Protection "1; mode=block"
# Type: List of Dictionaries
apache_custom_configs: []

# ============================================================================
# Virtual Hosts Configuration
# ============================================================================

# List of virtual hosts to configure.
# Each virtual host is defined as a dictionary with the following keys:
#
# Common Configuration (applies to both HTTP and HTTPS):
# - `name`: A descriptive name for the virtual host (used for the config filename).
# - `state`: State of the virtual host (present or absent). Default: present
# - `server_name`: The primary server name (FQDN).
# - `server_alias`: List of server aliases (optional).
# - `server_admin`: Email address of the server administrator (optional).
# - `document_root`: The document root directory for the virtual host.
# - `directory_options`: Options for the DocumentRoot directory (optional).
#                        Default: "Indexes FollowSymLinks"
# - `directory_allow_override`: AllowOverride setting for the DocumentRoot (optional).
#                               Default: "None"
# - `directory_require`: Require setting for the DocumentRoot (optional).
#                        Default: "all granted"
# - `custom_directives`: Additional Apache directives for both HTTP and HTTPS (optional).
#
# HTTP Configuration:
# - `http`: HTTP-specific configuration (optional)
#   - `enabled`: Whether to enable the HTTP virtual host. Default: true
#   - `listen`: The address:port or port to listen on. Default: "*:80"
#   - `error_log`: Path to the error log file. Default: ${APACHE_LOG_DIR}/<name>-error.log
#   - `access_log`: Path to the access log file. Default: ${APACHE_LOG_DIR}/<name>-access.log combined
#   - `custom_directives`: Additional Apache directives for HTTP only (optional).
#
# HTTPS Configuration:
# - `https`: HTTPS-specific configuration (optional)
#   - `enabled`: Whether to enable the HTTPS virtual host. Default: true
#   - `listen`: The address:port or port to listen on. Default: "*:443"
#   - `certificate_file`: Path to the SSL certificate file (required for HTTPS)
#   - `certificate_key_file`: Path to the SSL certificate key file (required for HTTPS)
#   - `certificate_chain_file`: Path to the SSL certificate chain file (optional)
#   - `error_log`: Path to the error log file. Default: ${APACHE_LOG_DIR}/<name>-ssl-error.log
#   - `access_log`: Path to the access log file. Default: ${APACHE_LOG_DIR}/<name>-ssl-access.log combined
#   - `custom_directives`: Additional Apache directives for HTTPS only (optional).
#
# Example - Simple HTTP virtual host:
# apache_virtual_hosts:
#   - name: example.com
#     server_name: example.com
#     server_alias:
#       - www.example.com
#     server_admin: admin@example.com
#     document_root: /var/www/example.com
#     http:
#       enabled: true
#     custom_directives: |
#       DirectoryIndex index.html index.php
#
# Example - HTTP and HTTPS virtual host:
# apache_virtual_hosts:
#   - name: secure.example.com
#     server_name: secure.example.com
#     document_root: /var/www/secure.example.com
#     http:
#       enabled: true
#       custom_directives: |
#         # Redirect all HTTP to HTTPS
#         Redirect permanent / https://secure.example.com/
#     https:
#       enabled: true
#       certificate_file: /etc/ssl/certs/example.com.crt
#       certificate_key_file: /etc/ssl/private/example.com.key
#       certificate_chain_file: /etc/ssl/certs/example.com-chain.crt
#
# Type: List of Dictionaries
apache_virtual_hosts: []

# ============================================================================
# Virtual Host Templates Configuration
# ============================================================================

# List of reusable virtual host templates.
# Templates define a base configuration that can be reused by multiple virtual hosts
# with variable substitution. Each template is defined as a dictionary with:
#
# - `name`: A unique identifier for the template
# - `http`: HTTP virtual host template content (optional)
#   - `content`: Jinja2 template content for HTTP configuration
# - `https`: HTTPS virtual host template content (optional)
#   - `content`: Jinja2 template content for HTTPS configuration
#
# Templates can use variables that will be substituted when creating virtual hosts.
# Variables are referenced using Jinja2 syntax: {{ variable_name }}
#
# Example:
# apache_vhost_templates:
#   - name: wordpress_site
#     http:
#       content: |
#         <VirtualHost *:80>
#             ServerName {{ server_name }}
#             DocumentRoot {{ document_root }}
#             <Directory {{ document_root }}>
#                 AllowOverride All
#                 Require all granted
#             </Directory>
#         </VirtualHost>
#
# Type: List of Dictionaries
apache_vhost_templates: []

# List of virtual hosts to create from templates.
# Each entry references a template and provides values for template variables.
#
# - `name`: Name for the virtual host configuration file
# - `template`: Name of the template to use (must match a template from apache_vhost_templates)
# - `state`: State of the virtual host (present or absent). Default: present
# - `enabled`: Whether to enable the virtual host. Default: true
# - `vars`: Dictionary of variables to substitute in the template
#
# Example:
# apache_vhosts_from_templates:
#   - name: myblog.com
#     template: wordpress_site
#     enabled: true
#     vars:
#       server_name: myblog.com
#       document_root: /var/www/myblog
#
# Type: List of Dictionaries
apache_vhosts_from_templates: []

# ============================================================================
# Security Configuration
# ============================================================================

# Apache security settings to configure in security.conf.
# Each setting is defined as a dictionary with the following keys:
# - `name`: The Apache directive name (e.g., ServerTokens, ServerSignature).
# - `value`: The value to assign to the directive.
# Type: List of Dictionaries
apache_security_settings:
  - name: ServerTokens
    value: Prod
  - name: ServerSignature
    value: "Off"
  - name: TraceEnable
    value: "Off"
